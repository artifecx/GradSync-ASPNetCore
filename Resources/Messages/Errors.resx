<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="a" xml:space="preserve">
    <value />
  </data>
  <data name="AddedToTeamNotification" xml:space="preserve">
    <value>You have been added to a team {0}, with specialization {1}.</value>
  </data>
  <data name="AgentNotFound" xml:space="preserve">
    <value>Agent not found.</value>
  </data>
  <data name="CannotAssignInClosedTickets" xml:space="preserve">
    <value>Cannot {0} assignees in {1} tickets.</value>
  </data>
  <data name="CannotAssignSameTeamWithoutAgent" xml:space="preserve">
    <value>Cannot assign to the same team without an agent selected.</value>
  </data>
  <data name="CannotReassignSameTeamAndAgent" xml:space="preserve">
    <value>Cannot reassign to the same team and agent.</value>
  </data>
  <data name="CurrentUserNotFound" xml:space="preserve">
    <value>Current user not found, unable to proceed.</value>
  </data>
  <data name="DescriptionExceeded" xml:space="preserve">
    <value>Description has exceeded the maximum allowed characters of 800.</value>
  </data>
  <data name="DuplicateTicket" xml:space="preserve">
    <value>A similar ticket already exists.</value>
  </data>
  <data name="DuplicateTicketCategory" xml:space="preserve">
    <value>Ticket is already in the selected category.</value>
  </data>
  <data name="ErrorAssignAgent" xml:space="preserve">
    <value>An error occurred while assigning the agent. Please try again.</value>
  </data>
  <data name="ErrorAttachmentIdEmpty" xml:space="preserve">
    <value>Attachment ID is invalid or empty!</value>
  </data>
  <data name="ErrorAttachmentNotFound" xml:space="preserve">
    <value>Attachment not found!</value>
  </data>
  <data name="ErrorCommentDelete" xml:space="preserve">
    <value>An error occurred while deleting your comment. Please try again.</value>
  </data>
  <data name="ErrorCommentEdit" xml:space="preserve">
    <value>An error occurred while editing your comment. Please try again.</value>
  </data>
  <data name="ErrorCommentPost" xml:space="preserve">
    <value>An error occurred while posting your comment. Please try again.</value>
  </data>
  <data name="ErrorCreateTeam" xml:space="preserve">
    <value>An error occurred while creating the team. Please try again.</value>
  </data>
  <data name="ErrorCreateTicket" xml:space="preserve">
    <value>An error occurred while creating a new ticket. Please try again.</value>
  </data>
  <data name="ErrorDeleteTeam" xml:space="preserve">
    <value>An error occurred while deleting the team. Please try again.</value>
  </data>
  <data name="ErrorDeleteTicket" xml:space="preserve">
    <value>An error occurred while deleting the ticket. Please try again.</value>
  </data>
  <data name="ErrorFeedbackSubmission" xml:space="preserve">
    <value>An error occurred while submitting your feedback. Please try again.</value>
  </data>
  <data name="ErrorReassignAgent" xml:space="preserve">
    <value>An error occurred while reassigning the agent. Please try again.</value>
  </data>
  <data name="ErrorTicketAssignment" xml:space="preserve">
    <value>An error occurred while updating the ticket assignment. Please try again.</value>
  </data>
  <data name="ErrorUpdatePassword" xml:space="preserve">
    <value>An error occurred while saving. Please try again.</value>
  </data>
  <data name="ErrorUpdatePreferences" xml:space="preserve">
    <value>An error occurred while saving. Please try again.</value>
  </data>
  <data name="ErrorUpdateTeam" xml:space="preserve">
    <value>An error occurred while updating the team. Please try again.</value>
  </data>
  <data name="ErrorUpdateTicket" xml:space="preserve">
    <value>An error occurred while updating the ticket. Please try again.</value>
  </data>
  <data name="GenericPasswordUpdate" xml:space="preserve">
    <value>An error occurred while updating the password. Please try again.</value>
  </data>
  <data name="InvalidAssignmentUpdate" xml:space="preserve">
    <value>Invalid assignment update. Please try again.</value>
  </data>
  <data name="InvalidSpecialization" xml:space="preserve">
    <value>Invalid specialization.</value>
  </data>
  <data name="InvalidStatusValue" xml:space="preserve">
    <value>Invalid status value: {0}</value>
  </data>
  <data name="InvalidTeamId" xml:space="preserve">
    <value>Team ID is invalid!</value>
  </data>
  <data name="InvalidTicketId" xml:space="preserve">
    <value>Ticket ID is invalid!</value>
  </data>
  <data name="MembersExistMessage" xml:space="preserve">
    <value>Cannot delete team with members, unassign or reassign them before deleting.</value>
  </data>
  <data name="NewPasswordSameAsCurrent" xml:space="preserve">
    <value>New password is the same as the existing password.</value>
  </data>
  <data name="NoChangesReply" xml:space="preserve">
    <value>No changes were made to the reply.</value>
  </data>
  <data name="NoChangesToTeam" xml:space="preserve">
    <value>No changes were made to the team.</value>
  </data>
  <data name="NoChangesToTicket" xml:space="preserve">
    <value>No changes were made to the ticket.</value>
  </data>
  <data name="NoUnresolvedTickets" xml:space="preserve">
    <value>No unresolved tickets older than {0}</value>
  </data>
  <data name="OldPasswordMismatch" xml:space="preserve">
    <value>Old password does not match with the existing password.</value>
  </data>
  <data name="RemovedFromTeamNotification" xml:space="preserve">
    <value>You have been removed from team {0}.</value>
  </data>
  <data name="ResolvedTicketChanges" xml:space="preserve">
    <value>Cannot make changes to resolved tickets.</value>
  </data>
  <data name="SelectAgentOrTeam" xml:space="preserve">
    <value>Please select either an agent or a team to continue.</value>
  </data>
  <data name="SelectAgentToAdd" xml:space="preserve">
    <value>Please select an agent to add to the team.</value>
  </data>
  <data name="ServerError" xml:space="preserve">
    <value>Server error occured!</value>
  </data>
  <data name="SubjectExceeded" xml:space="preserve">
    <value>Subject has exceeded the maximum allowed characters of 100.</value>
  </data>
  <data name="TeamNameExists" xml:space="preserve">
    <value>Team name already exists.</value>
  </data>
  <data name="TeamNotFound" xml:space="preserve">
    <value>Team not found!</value>
  </data>
  <data name="TicketClosedPriorityUpdate" xml:space="preserve">
    <value>Cannot change priority of a closed/resolved ticket.</value>
  </data>
  <data name="TicketClosedStatusUpdate" xml:space="preserve">
    <value>Cannot change status of a closed ticket.</value>
  </data>
  <data name="TicketClosedUpdate" xml:space="preserve">
    <value>Cannot update a closed ticket.</value>
  </data>
  <data name="TicketDoesNotExist" xml:space="preserve">
    <value>Ticket does not exist.</value>
  </data>
  <data name="TicketNoChanges" xml:space="preserve">
    <value>No changes were made to the ticket.</value>
  </data>
  <data name="TicketNotFound" xml:space="preserve">
    <value>Ticket was not found.</value>
  </data>
  <data name="UnresolvedTicketsMessage" xml:space="preserve">
    <value>Cannot delete team with unresolved tickets, reassign or unassign tickets before deleting.</value>
  </data>
  <data name="UserExists" xml:space="preserve">
    <value>UserId already exists!</value>
  </data>
</root>