@model Services.ServiceModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard | GradSync";
}

<div class="bg-[#F5F7F8]">
    <div class="flex">
        <div class="flex-1 bg-[#F5F7F8] p-3">
            <div class="flex-1 rounded-lg bg-white p-6 shadow-md">
                <h1 class="mb-12 text-left text-4xl font-bold text-[#7A1515]">Admin Dashboard</h1>

                <div class="grid-cols-1 mb-8 grid gap-6 lg:grid-cols-3">
                    <div class="rounded-lg bg-[#F5F7F8] p-6 shadow-md">
                        <h2 class="mb-6 text-2xl font-semibold text-[#7A1515]">User Data</h2>
                        <canvas id="userChart"></canvas>
                    </div>
                    <div class="rounded-lg bg-[#F5F7F8] p-6 shadow-md">
                        <h2 class="mb-6 text-2xl font-semibold text-[#7A1515]">Application Data</h2>
                        <canvas id="applicationChart"></canvas>
                    </div>
                    <div class="rounded-lg bg-[#F5F7F8] p-6 shadow-md">
                        <h2 class="mb-6 text-2xl font-semibold text-[#7A1515]">Job Data</h2>
                        <canvas id="jobChart"></canvas>
                    </div>
                </div>

                <div class="grid-cols-1 grid gap-6 lg:grid-cols-2">
                    <div class="rounded-lg bg-[#F5F7F8] p-6 shadow-md">
                        <h2 class="mb-6 text-2xl font-semibold text-[#7A1515]">Jobs Salary Distribution</h2>
                        <canvas id="jobSalaryDistribution"></canvas>
                    </div>
                    <div class="rounded-lg bg-[#F5F7F8] p-6 shadow-md">
                        <h2 class="mb-6 text-2xl font-semibold text-[#7A1515]">Total Applications vs Total Jobs</h2>
                        <canvas id="applicationsVsJobsChart"></canvas>
                    </div>

                    <div class="rounded-lg bg-[#F5F7F8] p-6 shadow-md">
                        <h2 class="mb-6 text-2xl font-semibold text-[#7A1515]">Applications by Employment Type</h2>
                        <canvas id="applicationsByEmploymentTypeChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const userData = {
            totalAdmins: @Model.TotalAdmins,
            totalRecruiters: @Model.TotalRecruiters,
            totalApplicants: @Model.TotalApplicants
                        };

        const applicationData = {
            totalApplicationsAllTime: @Model.TotalApplicationsAllTime,
            totalApplicationsThisYear: @Model.TotalApplicationsThisYear,
            totalApplicationsPerMonth: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TotalApplicationsPerMonth)),
            applicationsByStatus: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TotalJobsPerStatusType)),
            applicationsByEmploymentType: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TotalJobsPerEmploymentType))
                        };

        const jobData = {
            totalJobsAllTime: @Model.TotalJobsAllTime,
            totalJobsPerMonth: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TotalJobsPerMonth)),
            jobSalaryDistribution: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.JobSalaryDistribution))
                        };

        // User Roles
        var ctx1 = document.getElementById('userChart').getContext('2d');
        var userChart = new Chart(ctx1, {
            type: 'pie',
            data: {
                labels: ['Applicants', 'Recruiters', 'Admin'],
                datasets: [{
                    label: 'User Roles Distribution',
                    data: [userData.totalApplicants, userData.totalRecruiters, userData.totalAdmins],
                    backgroundColor: ['#7A1515', '#FFBF00', '#A5A4AA']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'User Roles Distribution'
                    }
                }
            }
        });

        // Applications
        var ctx2 = document.getElementById('applicationChart').getContext('2d');
        var applicationChart = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: Object.keys(applicationData.totalApplicationsPerMonth),
                datasets: [{
                    label: 'Applications Per Month',
                    data: Object.values(applicationData.totalApplicationsPerMonth),
                    fill: false,
                    backgroundColor: '#991b1b',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Applications Per Month (This Year)'
                    }
                }
            }
        });

        // Jobs
        var ctx3 = document.getElementById('jobChart').getContext('2d');
        var jobChart = new Chart(ctx3, {
            type: 'bar',
            data: {
                labels: Object.keys(jobData.totalJobsPerMonth),
                datasets: [{
                    label: 'Jobs Per Month',
                    data: Object.values(jobData.totalJobsPerMonth),
                    backgroundColor: '#FA9E05'
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Jobs Created Per Month'
                    }
                }
            }
        });

        // Job Salary Distribution
        var ctx4 = document.getElementById('jobSalaryDistribution').getContext('2d');
        var salaryChart = new Chart(ctx4, {
            type: 'bar',
            data: {
                labels: Object.keys(jobData.jobSalaryDistribution),
                datasets: [{
                    label: 'Jobs Salary Distribution',
                    data: Object.values(jobData.jobSalaryDistribution),
                    backgroundColor: '#4A772F'
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Job Salary Distribution'
                    }
                }
            }
        });

        // Total Applications vs Total Jobs
        var ctx5 = document.getElementById('applicationsVsJobsChart').getContext('2d');
        var applicationsVsJobsChart = new Chart(ctx5, {
            type: 'bar',
            data: {
                labels: ['Total Applications', 'Total Jobs'],
                datasets: [{
                    label: 'Total Count',
                    data: [applicationData.totalApplicationsAllTime, jobData.totalJobsAllTime],
                    backgroundColor: ['#991b1b', '#FA9E05']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Total Applications vs Total Jobs'
                    }
                }
            }
        });

        // Applications by Employment Type
        var ctx6 = document.getElementById('applicationsByEmploymentTypeChart').getContext('2d');
        var applicationsByEmploymentTypeChart = new Chart(ctx6, {
            type: 'bar',
            data: {
                labels: Object.keys(applicationData.applicationsByEmploymentType),
                datasets: [{
                    label: 'Applications by Employment Type',
                    data: Object.values(applicationData.applicationsByEmploymentType),
                    backgroundColor: ['#fdb35e', '#77efa1', '#982B1C', '#539ED6']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Applications by Employment Type'
                    }
                }
            }
        });
    </script>
}
