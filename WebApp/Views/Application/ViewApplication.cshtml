@model Services.ServiceModels.ApplicationViewModel
@using Data.Models;
@using Humanizer;
@using System.Text.Json;

@{
    ViewData["Title"] = $"{Model.Job.Title} Application | GradSync";
    var userId = ViewBag.UserId;
    string aspAction = "GetAllApplications";
}

<div class="mt-8 min-h-screen bg-gray-100 text-black">
    <div class="mx-auto mt-10 flex max-w-7xl gap-6 rounded-lg bg-gray-100 px-6">
        <div class="w-full justify-between">
            <div class="w-full rounded-lg bg-white p-6 px-12 shadow-sm">
                <div class="flex justify-between">         
                    <a href="#" id="back-button" class="hover-[#991b1b] flex items-center text-xs font-semibold text-[#7A1515]">
                        <i class="fas fa-arrow-left mr-2"></i> Back
                    </a>
                </div>

                <div class="flex justify-between">
                    <div class="font-bold text-[40px]">@Model.Job.Title</div>

                    <!-- Action Buttons -->
                    <div class="flex justify-between space-x-4 p-2">
                        @if (User.IsInRole("Applicant"))
                        {
                            @if (Model.ApplicationStatusType.Name == "Withdrawn")
                                    {
                                        <!-- Re-Apply -->
                                        <button onclick="applyJobHandler('@Model.JobId')"
                                                class="flex items-center justify-center rounded-lg bg-[#7A1515] px-4 py-2 text-white transition-all hover:bg-[#991b1b]">
                                            <i class="fa-regular fa-paper-plane pr-1"></i> Apply Again
                                        </button>
                                    }
                                    else
                                    {
                                        <!-- Withdraw -->
                                        <button class="flex items-center justify-center rounded-lg px-4 py-2 transition-all text-white bg-[#7A1515] hover:bg-[#991b1b] hover:text-white"
                                                id="withdrawButton"
                                                data-action-url="@Url.Action("WithdrawApplication", "Application")"
                                                onclick="withdrawApplicationHandler('@Model.ApplicationId')">
                                            Withdraw Application
                                        </button>
                                    }
                                }
                                else if (User.IsInRole("Recruiter") && string.Equals(userId, Model.Job.PostedById))
                                {
                                    <!-- Update Status -->
                                    <button class="btn-primary flex items-center justify-center rounded-lg px-4 py-2 transition-all hover:bg-[#991b1b] hover:text-white"
                                            data-toggle="modal"
                                            data-target="#">
                                        <i class="fa-solid fa-arrows-rotate pr-2"></i> Update Status
                                    </button>
                                }
                            </div>
                </div>

                <!-- Applicant Name and Date Updated -->
                <div class="w-full text-sm text-gray-700">
                   <div class="">
                       <!-- Date Applied -->
                        <div class="text-xs text-gray-500" title="@Model.CreatedDate">
                            Applied
                            @(Model.CreatedDate == DateTime.MinValue ? "Date Not Available" : Model.CreatedDate.ToUniversalTime().Humanize())
                      </div>
                   </div>
                </div>          
            </div>
        </div>
    </div>     

    <!-- Main Content with Sidebar -->
    <div class="max-h-auto mx-auto mt-6 flex max-w-7xl gap-6 px-6">
        <!-- Messages Section -->
        <div class="w-full rounded-lg border border-gray-200 bg-white p-6 shadow-sm">
            <h2 class="mb-4 pl-4 text-2xl font-bold text-gray-500">Chat History</h2>

            <!-- Chat Box Container -->
            <div class="max-h-[calc(100%-100px)] min-h-[calc(100%-100px)] mx-4 flex flex-col rounded-lg border border-gray-200 bg-gray-50">
                <!-- Scrollable Chat Messages -->
                <div class="flex flex-grow flex-col overflow-y-auto p-4" id="messageList">
                    <div id="loadingIndicator" class="hidden text-center">
                        <div class="loader"></div>
                        <p>Loading messages...</p>
                    </div>
                    <!-- Message Div -->
                </div>
                <form id="sendForm">
                    <div class="flex items-center border-t border-gray-200 p-4">
                        <input id="messageInput" type="text" class="flex-grow rounded-lg border border-gray-300 p-2 text-sm focus:outline-none focus:ring-2" placeholder="Type your message..." @(User.IsInRole("NLO") ? "hidden" : "")>
                        <button id="sendButton" class="ml-4 rounded bg-[#7A1515] px-4 py-2 font-semibold text-white hover:bg-[#A53D3D] disabled:bg-gray-400 disabled:cursor-not-allowed" disabled @(User.IsInRole("NLO") ? "hidden" : "")>
                            Send
                        </button>
                        <input type="hidden" id="threadId" value="@Model.ApplicationId" />
                        <input type="hidden" id="userId1" value="@Model.ApplicantId" />
                        <input type="hidden" id="userId2" value="@Model.Job.PostedById" />
                        <input type="hidden" id="title" value="Application" />
                        <input type="hidden" id="threadId" value="@Model.ApplicationId" />
                        <input type="hidden" id="currentUserId" value="@ViewBag.UserId" />
                    </div>
                </form>
            </div>
        </div>

        <!-- Sidebar -->
        @await Html.PartialAsync("InfoTab", Model)
    </div>
</div>

<!-- TempData for Notifications -->
<div id="tempDataContainer" data-success="@TempData["SuccessMessage"]" data-error="@TempData["ErrorMessage"]"></div>
<input type="hidden" id="actionUrl" value="@Url.Action("WithdrawApplication", "Application")" />

@section Scripts {
    <script src="~/js/toastrNotification.js"></script>
    <script src="~/js/job.js"></script>
    <script src="~/js/messaging.js"></script>
    <script>
        const urlParams = new URLSearchParams(window.location.search);
        sessionStorage.setItem('sortBy', urlParams.get('sortBy') || '');
        sessionStorage.setItem('search', urlParams.get('search') || '');
        sessionStorage.setItem('filterByWorkSetup', urlParams.get('filterByWorkSetup') || '');
        sessionStorage.setItem('filterByProgram', urlParams.get('filterByProgram') || '');
        sessionStorage.setItem('filterByStatus', urlParams.get('filterByStatus') || '');
        sessionStorage.setItem('pageIndex', urlParams.get('pageIndex') || '1');

        const idParam = urlParams.get('id') ? `?id=${urlParams.get('id')}` : '';
        const newUrl = window.location.origin + window.location.pathname + idParam;
        window.history.replaceState({}, document.title, newUrl);

        document.querySelector('#back-button').addEventListener('click', function (event) {
            event.preventDefault();
            const baseUrl = '@Url.Action($"{aspAction}", "Application")';
            const params = new URLSearchParams();
            params.set('sortBy', sessionStorage.getItem('sortBy') || '');
            params.set('search', sessionStorage.getItem('search') || '');
            params.set('filterByWorkSetup', sessionStorage.getItem('filterByWorkSetup') || '');
            params.set('filterByProgram', sessionStorage.getItem('filterByProgram') || '');
            params.set('filterByStatus', sessionStorage.getItem('filterByStatus') || '');
            params.set('pageIndex', sessionStorage.getItem('pageIndex') || '1');
            window.location.href = `${baseUrl}?${params.toString()}`;
        });
    </script>
}
