@model Services.ServiceModels.PaginatedList<Services.ServiceModels.ApplicationViewModel>
@using Data.Models
@using System.Text.Json;
@using Humanizer

@{
    ViewData["Title"] = "Application List";

    string search = ViewData["Search"] as string;
    string filterByStatus = ViewData["FilterByStatus"] as string;
    string aspAction = "GetAllApplications";

    int pageIndex = Model.PageIndex;
}

<div class="flex min-h-screen bg-[#F5F7F8] mt-12">
    <div class="flex-1 flex items-center justify-center p-3">
        <div class="h-full w-full max-w-7xl rounded-lg bg-white p-6 mt-12 shadow-md">
            <div class="flex items-center justify-between">
                <h1 class="pb-8 text-left text-4xl font-bold text-[#7A1515]">
                    Job Applications
                </h1>

                <!-- Search and Sort Button -->
                <div class="flex items-center space-x-2 pb-8">
                    <div class="flex items-center space-x-2">
                        <select name="statusFilter" class="border p-2 rounded">
                            <option value="">All Statuses</option>
                            <option value="Submitted">Submitted</option>
                            <option value="Reviewed">Reviewed</option>
                        </select>
                        <form method="get" asp-action="@aspAction" asp-route-search="@search"
                              class="flex items-center space-x-2">
                            @await Component.InvokeAsync("SearchInput", new { searchValue = search, placeholder = "Search by Job Title" })
                            <input type="hidden" name="search" value="@ViewData["Search"]" />
                        </form>
                    </div>
                </div>
            </div>

            <!-- Table -->
            <div class="bg-white min-w-full rounded-lg">
                <table class="min-w-full table-auto rounded-lg border bg-white">
                    
                    <!-- Table Head/Column Names -->
                    <thead class="rounded-lg border bg-gray-100">
                    <th class="px-6 py-3 text-xs font-medium uppercase tracking-wider text-gray-900">
                            @Html.DisplayNameFor(model => model.First().JobId)

                        <!-- -Need to display jobtitle not Id
                             -Can be sorted alphabetically -->
                    </th>
                    <!-- Placeholders only, need to be defined :) -->
                    <th class="px-6 py-3 text-xs font-medium uppercase tracking-wider text-gray-900">Employment Type</th>
                    <th class="px-6 py-3 text-xs font-medium uppercase tracking-wider text-gray-900">Status</th>
                    <th class="px-6 py-3 text-xs font-medium uppercase tracking-wider text-gray-900">Application Date</th>
                    <th class="px-6 py-3 text-xs font-medium uppercase tracking-wider text-gray-900">Work Setup</th>
                    <th class="px-6 py-3 text-xs font-medium uppercase tracking-wider text-gray-900">Action</th>
                    </thead>

                    <!-- Table Body/Rows -->
                    <tbody class="divide-y divide-gray-200 rounded-lg border bg-white">
                        @* @if (!Model.Any())
                        {
                        <tr>
                        <td colspan="13" class="whitespace-nowrap px-6 py-3 text-center text-sm text-gray-500">
                        @(noResult ? Html.Raw("No jobs found") : Html.Raw("No jobs found matching the criteria"))
                        </td>
                        </tr>
                        }
                        else
                        { *@ <!--Should display messages if function is already working-->
                        @foreach (var app in Model)
                        {
                            <tr class="hover:bg-gray-100 ">
                                <td class="px-6 py-3 text-sm text-gray-700">
                                    <a href="@Url.Action("GetJob", "Job", 
                                        new {
                                            id = app.JobId, 
                                            search = search,
                                            pageIndex = Model.PageIndex,
                                        })"
                                       class="hover:text-[#A53D3D] hover:underline">
                                        @app.JobId @* Should Display Job Title *@
                                    </a>
                                </td>

                                <!-- Placeholders only, need to be defined :) -->
                                <td class="px-6 py-3 text-sm text-gray-700">Employment Type</td>
                                <td class="px-6 py-3 text-sm text-gray-700">@app.ApplicationStatusTypeId</td>
                                <td class="px-6 py-3 text-sm text-gray-700">@app.CreatedDate.ToString("MM/dd/yyyy")</td>
                                <td class="px-6 py-3 text-sm text-gray-700">Work Setup</td>

                                <td class="py-3 pl-6 text-left"> Actions
                                    <!--Action Button DropDown-->
                                    <div class="relative">
                                         @* <button data-jobid="@item.JobId"
                                                 class="actionDropdownJobBtn cursor-pointer px-6 text-black hover:text-[#A53D3D] focus:outline-none">
                                             <i class="fas fa-ellipsis-v"></i>
                                         </button>

                                         <div id="actionDropdownJobMenu-@item.JobId"
                                              class="actionDropdownJobMenu z-10 ring-1 ring-opacity-5 absolute right-0 mt-2 hidden w-48 origin-top-right rounded-md bg-white text-left shadow-lg ring-black">
                                             <div class="space-y-1 py-1">

                                                 <!-- Job Details -->
                                                 @* <button onclick="location.href='@Url.Action("GetJob", "Job",
                                                     new {
                                                         new {
                                                             id = app.JobId,
                                                             search = search,
                                                             pageIndex = Model.PageIndex,
                                                     })'"
                                                         class="text-grey-700 w-full cursor-pointer px-4 py-2 text-left text-sm hover:text-[#A53D3D] focus:outline-none">
                                                     <i class="fas fa-info-circle mr-2"></i> Job Details
                                                 </button> *@

                                                 <!-- Edit Application -->
                                                 @* <button onclick="location.href='@Url.Action("GetJob", "Job",
                                                     new {
                                                         id = item.JobId,
                                                         sortBy = sortBy,
                                                         search = search,
                                                         pageIndex = Model.PageIndex ,
                                                         filterByStatusType = filterByStatusType,
                                                         filterByWorkSetup = filterByWorkSetup,
                                                         filterByEmploymentType = filterByEmploymentType,
                                                         filterByCompany = filterByCompany,
                                                         showModal = "editJob"
                                                     })'"
                                                         class="text-grey-700 w-full cursor-pointer px-4 py-2 text-left text-sm hover:text-[#A53D3D] focus:outline-none">
                                                     <i class="fas fa-edit -circle mr-2"></i> Edit Job Info
                                                 </button> *@

                                                 <!-- Archive Job -->
                                                 @* <button onclick=" displayDeleteModal('@item.JobId' , '@item.PostedBy')"
                                                         class="text-grey-700 w-full cursor-pointer px-4 py-2 text-left text-sm hover:text-[#A53D3D] focus:outline-none">
                                                     <i class="fas fa-info-circle mr-2"></i> Archive Chat
                                                 </button> 
                                             </div>
                                         </div> *@
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Pagination -->
                <nav class="flex justify-center pt-3">
                    <ul class="pagination flex items-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link border border-red-300 px-3 py-1 text-gray-700 hover:bg-gray-200"
                                   asp-action="@aspAction"
                                   asp-route-pageIndex="@(Model.PageIndex - 1)"
                                   asp-route-search="@search">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link border px-3 py-1 @(i == Model.PageIndex ? "bg-blue-500 text-white" : "text-gray-700 hover:bg-gray-200")"
                                   asp-action="@aspAction"
                                   asp-route-pageIndex="@i"
                                   asp-route-search="@search">
                                    @i
                                </a>
                            </li>
                        }
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link border border-red-300 px-3 py-1 text-gray-700 hover:bg-gray-200"
                                   asp-action="@aspAction"
                                   asp-route-pageIndex="@(Model.PageIndex + 1)"
                                   asp-route-search="@search">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/toastrNotification.js"></script>
}
