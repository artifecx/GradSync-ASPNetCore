@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    bool isAdmin = HttpContextAccessor.HttpContext.User.IsInRole("Admin");
    var userId = HttpContextAccessor.HttpContext.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    var role = HttpContextAccessor.HttpContext.User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;
    bool isSuper = User.HasClaim("IsSuperAdmin", "true");
    var userName = HttpContextAccessor.HttpContext.User.Identity.Name;
    bool isLoggedIn = HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated;
}

<nav class="fixed z-50 w-full bg-white text-[#743030]">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <div class="flex h-16 justify-between">
            <div class="flex">
                <div class="flex-shrink-0 flex items-center">
                    <a href="@Url.Action("Index", "Home")" class="flex items-center">
                        <img src="~/img/logo1.png" alt="Logo" class="mr-3 h-8 w-auto">
                    </a>
                </div>
                <div class="hidden md:ml-6 md:flex md:space-x-8">
                    <a href="@Url.Action("Index", "Home")" class="inline-flex items-center px-1 pt-1 font-semibold text-[#7A1515] hover:text-[#A53D3D] hover:underline">
                        Home
                    </a>
                    @* Conditionally render 'Jobs' link based on user role *@
                    @if (!isAdmin)
                    {
                        <a href="@Url.Action("GetAllJobsApplicant", "Job")" class="inline-flex items-center px-1 pt-1 font-semibold text-[#7A1515] hover:text-[#A53D3D] hover:underline">
                            Find Job
                        </a>
                    }
                    <a href="@Url.Action("Contact", "Home")" class="inline-flex items-center px-1 pt-1 font-semibold text-[#7A1515] hover:text-[#A53D3D] hover:underline">
                        Contact
                    </a>
                    <a href="@Url.Action("About", "Home")" class="inline-flex items-center px-1 pt-1 font-semibold text-[#7A1515] hover:text-[#A53D3D] hover:underline">
                        About
                    </a>
                </div>
            </div>
            <div class="hidden md:ml-6 md:flex md:items-center">
                @if (isLoggedIn)
                {
                    <!-- Profile dropdown -->
                    <div class="relative ml-3">
                        <button type="button" class="flex rounded-full text-sm focus:outline-none" id="user-menu-button" aria-expanded="false" aria-haspopup="true" onclick="toggleDropdown()">
                            <span class="sr-only">Open user menu</span>
                            <i class="fa fa-user-circle fa-2x"></i>
                        </button>
                        <!-- Dropdown menu -->
                        <div id="dropdown-menu" class="absolute right-0 mt-2 hidden w-48 origin-top-right rounded-md bg-white py-1 shadow-lg" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button">
                            <a href="@Url.Action("GetAllApplications", "Application")" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem">
                                <i class="fa-solid fa-briefcase mr-2"></i>Applications
                            </a>
                            <a href="@Url.Action("GetUserProfile", "UserProfile")" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem">
                                <i class="fa fa-cog mr-2"></i>Settings
                            </a>
                            <a href="#" data-toggle="modal" data-target="#logoutModal" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem">
                                <i class="fa fa-sign-out mr-2"></i>Log out
                            </a>
                        </div>
                    </div>
                }
                else
                {
                    <div class="flex space-x-4">
                        <a href="/Account/Login" class="rounded bg-[#743030] px-5 py-2 text-sm font-semibold text-white">Sign In</a>
                        <a href="/Account/Register" class="rounded bg-[#FFBF03] px-5 py-2 text-sm font-semibold text-[#743030]">Register</a>
                    </div>
                }
            </div>
            <div class="-mr-2 flex items-center md:hidden">
                <!-- Mobile menu button -->
                <button type="button" class="inline-flex items-center justify-center rounded-md bg-white p-2 text-[#743030] hover:bg-gray-100 focus:outline-none" aria-controls="mobile-menu" aria-expanded="false" onclick="toggleMobileMenu()">
                    <span class="sr-only">Open main menu</span>
                    <svg id="menu-icon" class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <!-- Menu icon -->
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8h16M4 16h16" />
                    </svg>
                    <svg id="close-icon" class="hidden h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <!-- Close icon -->
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>
</nav>

<script>
    function toggleDropdown() {
        var menu = document.getElementById('dropdown-menu');
        menu.classList.toggle('hidden');
    }

    function toggleMobileMenu() {
        var menu = document.getElementById('mobile-menu');
        var menuIcon = document.getElementById('menu-icon');
        var closeIcon = document.getElementById('close-icon');
        menu.classList.toggle('hidden');
        menuIcon.classList.toggle('hidden');
        closeIcon.classList.toggle('hidden');
    }

    document.addEventListener('click', function (event) {
        var dropdownButton = document.getElementById('user-menu-button');
        var dropdownMenu = document.getElementById('dropdown-menu');
        if (!dropdownButton.contains(event.target) && !dropdownMenu.contains(event.target)) {
            dropdownMenu.classList.add('hidden');
        }
    });
</script>
