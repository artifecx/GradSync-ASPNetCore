@model Services.ServiceModels.PaginatedList<Services.ServiceModels.CompanyViewModel>
@using static Resources.Constants.SvgIcons

@{
    ViewData["Title"] = "Company Management | GradSync";
    await Html.RenderPartialAsync("_AddCompanyModal", new Services.ServiceModels.CompanyViewModel());
    await Html.RenderPartialAsync("_DeleteModal"); 

    string aspAction = "GetAllCompanies";

    string search = ViewData["Search"] as string;
    string sortBy = ViewData["SortBy"] as string;
    bool? verified = ViewData["Verified"] as bool?;
    bool? hasValidMOA = ViewData["HasValidMOA"] as bool?;
    int pageIndex = Model.PageIndex;

    string sortByName = sortBy == "name_asc" ? "name_desc" : "name_asc";
    string sortByActiveListings = sortBy == "jobs_asc" ? "jobs_desc" : "jobs_asc";

    bool hasFilters = !string.IsNullOrEmpty(search) ||
        verified.HasValue ||
        hasValidMOA.HasValue;
}

<div class="h-full w-full p-6">
    <div class="flex items-center justify-between">
        <h1 class="pb-8 text-left text-4xl font-bold text-[#7A1515]">
            Company Management
        </h1>

        <!-- Search Button -->
        <div class="flex items-center space-x-2 pb-8">
            <div class="flex items-center space-x-2">
                @if (hasFilters)
                {
                    <form method="get" asp-action="@aspAction">
                        <button type="submit" class="rounded bg-gray-300 px-2 py-1 text-white">
                            &times;
                        </button>
                    </form>
                }
                <form method="get" asp-action="@aspAction"
                      class="flex items-center space-x-2">
                    @await Component.InvokeAsync("SearchInput", new { searchValue = search, placeholder = "Name, contact, address" })
                    <input type="hidden" name="sortBy" value="@sortBy" />
                    <input type="hidden" name="verified" value="@verified" />
                    <input type="hidden" name="hasValidMOA" value="@hasValidMOA" />
                </form>

                @if (User.IsInRole("NLO"))
                {
                    <div class="ml-3">
                        <button type="button"
                                class="flex items-center rounded bg-[#7A1515] px-4 py-2 font-semibold text-white hover:bg-[#A04747]"
                                data-toggle="modal"
                                data-target="#addCompanyModal">
                            @Html.Raw(AddIcon)
                            Add Company
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Table -->
    <div class="h-[75vh] overflow-auto rounded-lg bg-[#F5F7F8]">
        <div class="flex w-full justify-end bg-white py-2">
            <button onclick="featureUnavailable()"
                    class="flex w-full max-w-[200px] cursor-pointer items-center justify-end text-right text-[#343131] hover:text-[#A04747] focus:outline-none">
                @Html.Raw(ArchiveIcon)Archived Companies
            </button>
        </div>
        <table class="min-w-full table-auto rounded-lg bg-white">
            <thead class="rounded-md bg-gray-100">
                <tr>
                    <!-- Name -->
                    <th class="px-3 py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">
                        <a asp-action="@aspAction"
                           asp-route-sortBy="@sortByName"
                           asp-route-search="@search"
                           asp-route-pageIndex="@pageIndex"
                           asp-route-verified="@verified"
                           asp-route-hasValidMOA="@hasValidMOA"
                           class="flex items-center text-[#625f5f] hover:!no-underline hover:text-[#A04747] @(sortBy == "name_asc" || sortBy == "name_desc"? "text-[#A04747]" : "")">
                            @Html.DisplayNameFor(model => model.First().Name)
                            @(sortBy == "name_asc" ? Html.Raw(SortUpIcon) : (sortBy == "name_desc" ? Html.Raw(SortDownIcon) : Html.Raw(SortIcon)))
                        </a>
                    </th>
                    <!-- Email -->
                    <th class="py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">@Html.DisplayNameFor(model => model.First().ContactEmail)</th>
                    <!-- Number -->
                    <th class="py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">Number</th>
                    <!-- Address -->
                    <th class="py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">@Html.DisplayNameFor(model => model.First().Address)</th>
                    <!-- Active Listings -->
                    <th class="px-3 py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">
                        <a asp-action="@aspAction"
                           asp-route-sortBy="@sortByActiveListings"
                           asp-route-search="@search"
                           asp-route-pageIndex="@pageIndex"
                           asp-route-verified="@verified"
                           asp-route-hasValidMOA="@hasValidMOA"
                           class="flex items-center text-[#625f5f] hover:!no-underline hover:text-[#A04747] @(sortBy == "jobs_asc" || sortBy == "jobs_desc"? "text-[#A04747]" : "")">
                            @Html.DisplayNameFor(model => model.First().ActiveJobListings)
                            @(string.Equals(sortBy, "jobs_asc") ? Html.Raw(SortUpIcon) : (string.Equals(sortBy, "jobs_desc") ? Html.Raw(SortDownIcon) : Html.Raw(SortIcon)))
                        </a>
                    </th>
                    <!-- Is Verified -->
                    <th class="px-3 py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">
                        <div class="dropdown relative">
                            <a class="flex cursor-pointer items-center text-[#625f5f] hover:!no-underline hover:text-[#A04747] @(verified.HasValue ? "text-[#A04747]" : "")" 
                                href="#" id="statusTypeDropdown" 
                                data-toggle="dropdown" 
                                aria-haspopup="true" 
                                aria-expanded="false">
                                @if (!verified.HasValue)
                                {
                                    @Html.DisplayNameFor(model => model.First().IsVerified)
                                }
                                else
                                {
                                    <text>@(verified == true ? "Verified" : "Unverified")</text>
                                }
                                @Html.Raw(DropdownIcon)
                            </a>
                            <div class="dropdown-menu absolute hidden max-h-[200px] space-y-2 overflow-y-auto pt-1 text-[#625f5f]" aria-labelledby="statusTypeDropdown">
                                <a class="dropdown-item block px-4 text-sm hover:bg-gray-100"
                                   asp-action="@aspAction"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search"
                                   asp-route-hasValidMOA="@hasValidMOA"
                                   asp-route-verified="">All</a>
                                <a class="dropdown-item block px-4 text-sm hover:bg-gray-100"
                                   asp-action="@aspAction"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search"
                                   asp-route-hasValidMOA="@hasValidMOA"
                                   asp-route-verified="true">Verified</a>
                                <a class="dropdown-item block px-4 text-sm hover:bg-gray-100"
                                   asp-action="@aspAction"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search"
                                   asp-route-hasValidMOA="@hasValidMOA"
                                   asp-route-verified="false">Unverified</a>
                            </div>
                        </div>
                    </th>
                    <!-- Has MOA -->
                    <th class="px-3 py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">
                        <div class="dropdown relative">
                            <a class="flex cursor-pointer items-center text-[#625f5f] hover:!no-underline hover:text-[#A04747] @(hasValidMOA.HasValue ? "text-[#A04747]" : "")" 
                                href="#" id="statusTypeDropdown" 
                                data-toggle="dropdown" 
                                aria-haspopup="true" 
                                aria-expanded="false">
                                @if (!hasValidMOA.HasValue)
                                {
                                    @Html.DisplayNameFor(model => model.First().HasValidMOA)
                                }
                                else
                                {
                                    <text>@(hasValidMOA == true ? "With MOA" : "No MOA")</text>
                                }
                                @Html.Raw(DropdownIcon)
                            </a>
                            <div class="dropdown-menu absolute hidden max-h-[200px] space-y-2 overflow-y-auto pt-1 text-[#625f5f]" aria-labelledby="statusTypeDropdown">
                                <a class="dropdown-item block px-4 text-sm hover:bg-gray-100"
                                   asp-action="@aspAction"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search"
                                   asp-route-hasValidMOA=""
                                   asp-route-verified="@verified">All</a>
                                <a class="dropdown-item block px-4 text-sm hover:bg-gray-100"
                                   asp-action="@aspAction"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search"
                                   asp-route-hasValidMOA="true"
                                   asp-route-verified="@verified">With MOA</a>
                                <a class="dropdown-item block px-4 text-sm hover:bg-gray-100"
                                   asp-action="@aspAction"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search"
                                   asp-route-hasValidMOA="false"
                                   asp-route-verified="@verified">No MOA</a>
                            </div>
                        </div>
                    </th>
                    <!-- Actions -->
                    <th class="px-6 py-3 text-xs font-medium uppercase tracking-wider text-[#625f5f]">Action</th>
                </tr>
            </thead>

            <!-- Table Body/Rows -->
            <tbody class="divide-y divide-gray-200 bg-white">
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="10" class="whitespace-nowrap px-6 py-3 text-center text-sm text-[#625f5f]">
                            @(hasFilters ? "No companies found" : "No company found matching the criteria")
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var item in Model)
                    {
                        <tr class="hover:bg-gray-100">
                            <td class="py-3 pl-3 text-xs font-medium text-[#7A1515]">
                                <button class="focus:!outline-none" onclick="location.href='@Url.Action("GetCompany", "Company",
                                            new {
                                                id = item.CompanyId,
                                                sortBy = sortBy,
                                                search = search,
                                                pageIndex = Model.PageIndex,
                                                verified = verified,
                                                hasValidMOA = hasValidMOA,
                                            })'">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </button>
                            </td>
                            <td class="py-3 pr-3 text-xs font-medium text-[#625f5f]">@Html.DisplayFor(modelItem => item.ContactEmail)</td>
                            <td class="py-3 pr-3 text-xs font-medium text-[#625f5f]">@Html.DisplayFor(modelItem => item.ContactNumber)</td>
                            <td class="py-3 pr-3 text-xs font-medium text-[#625f5f]">@Html.DisplayFor(modelItem => item.Address)</td>
                            <td class="py-3 pl-3 text-xs font-medium text-[#625f5f]">@Html.DisplayFor(modelItem => item.ActiveJobListings)</td>
                            <td class="py-3 pl-3 text-xs font-medium text-[#625f5f]">
                                @if (item.IsVerified)
                                {
                                    <span>&#10004;</span>
                                }
                                else
                                {
                                    <span>&#10006;</span>
                                }
                            </td>
                            <td class="py-3 pl-3 text-xs font-medium text-[#625f5f]">
                                @if (item.HasValidMOA)
                                {
                                    <span>&#10004;</span>
                                }
                                else
                                {
                                    <span>&#10006;</span>
                                }
                            </td>

                            <td class="py-3 pl-6 text-left">
                                <div class="relative">
                                    <!--Action Button DropDown-->
                                    <button data-companyid="@item.CompanyId"
                                            class="actionDropdownCompanyBtn flex cursor-pointer items-center px-6 text-[#343131] hover:text-[#A04747] focus:outline-none">
                                        @Html.Raw(EllipsisVIcon)
                                    </button>

                                    <div id="actionDropdownCompanyMenu-@item.CompanyId"
                                         class="actionDropdownCompanyMenu z-10 ring-1 ring-opacity-5 absolute right-0 mt-2 hidden w-48 origin-top-right rounded-md bg-white text-left shadow-lg ring-black">
                                        <div class="space-y-1 py-1">
                                            <!-- Company Details -->
                                            <button onclick="location.href='@Url.Action("GetCompany", "Company",
                                                                new {
                                                                    id = item.CompanyId,
                                                                    sortBy = sortBy,
                                                                    search = search,
                                                                    pageIndex = Model.PageIndex,
                                                                    verified = verified,
                                                                    hasValidMOA = hasValidMOA,
                                                                })'"
                                                    class="flex w-full cursor-pointer items-center px-4 py-2 text-left text-sm text-[#343131] hover:text-[#A04747] focus:outline-none">
                                                @Html.Raw(DetailsIcon) Details
                                            </button>

                                            <!-- Edit Company -->
                                            <button onclick="location.href='@Url.Action("GetCompany", "Company",
                                                                new {
                                                                    id = item.CompanyId,
                                                                    sortBy = sortBy,
                                                                    search = search,
                                                                    pageIndex = Model.PageIndex,
                                                                    verified = verified,
                                                                    hasValidMOA = hasValidMOA,
                                                                    showModal = "editCompany"
                                                                })'"
                                                    class="flex w-full cursor-pointer items-center px-4 py-2 text-left text-sm text-[#343131] hover:text-[#A04747] focus:outline-none">
                                                @Html.Raw(UpdateIcon) Update
                                            </button>

                                            <!-- Archive Company -->
                                            <button onclick="displayDeleteModal('@item.CompanyId' , '@item.Name')"
                                                    class="flex w-full cursor-pointer items-center px-4 py-2 text-left text-sm text-[#343131] hover:text-[#A04747] focus:outline-none">
                                                @Html.Raw(ArchiveIcon) Archive
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <!-- Pagination -->
    <nav class="flex justify-center pt-3">
        <ul class="pagination flex items-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link flex items-center border px-3 py-1 !text-[#7A1515] hover:!text-[#A04747]"
                       asp-action="@aspAction"
                       asp-route-pageIndex="@(Model.PageIndex - 1)"
                       asp-route-sortBy="@sortBy"
                       asp-route-search="@search"
                       asp-route-verified="@verified"
                       asp-route-hasValidMOA="@hasValidMOA">
                        @Html.Raw(PaginationLeft)
                    </a>
                </li>
            }
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link border px-3 py-1 @(i == Model.PageIndex ? "!text-white hover:!bg-[#A04747]" : "!text-[#7A1515] hover:!text-[#A04747]")"
                       asp-action="@aspAction"
                       asp-route-pageIndex="@i"
                       asp-route-sortBy="@sortBy"
                       asp-route-search="@search"
                       asp-route-verified="@verified"
                       asp-route-hasValidMOA="@hasValidMOA">
                        @i
                    </a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link border px-3 py-1 !text-[#7A1515] hover:!text-[#A04747]"
                       asp-action="@aspAction"
                       asp-route-pageIndex="@(Model.PageIndex + 1)"
                       asp-route-sortBy="@sortBy"
                       asp-route-search="@search"
                       asp-route-verified="@verified"
                       asp-route-hasValidMOA="@hasValidMOA">
                        @Html.Raw(PaginationRight)
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>

<!-- Values passed to the js files -->
<div id="tempDataContainer" data-success="@TempData["SuccessMessage"]" data-error="@TempData["ErrorMessage"]"></div>
<input type="hidden" id="baseUrl" value="@Url.Action("GetAllCompanies", "Company")" />
<input type="hidden" id="deleteUrl" value="@Url.Action("Archive", "Company")" />

@section Scripts {
    <script src="~/js/toastrNotification.js"></script>
    <script src="~/js/archive.js"></script>
    <script src="~/js/company.js"></script>
}