@model Services.ServiceModels.CompanyViewModel

@{
    ViewData["Title"] = $"{Model.Name} | GradSync";
    var aspAction = "GetAllCompanies";

    // await Html.RenderPartialAsync("_AddRecruiterModal", Model);
    // await Html.RenderPartialAsync("_ReassignRecruiterModal", Model);
}

@Html.AntiForgeryToken()

<div class="min-h-screen bg-[#F5F7F8]">
    <div class="flex items-center justify-center p-4">
        <div class="w-full max-w-7xl space-y-4 rounded-lg bg-white p-6 shadow-md">
            <!-- Header Section -->
            <div class="flex items-center">
                <div class="flex items-center">
                    <!-- Back Button -->
                    <a href="#" class="back-button mr-4 text-black hover:text-gray-700">
                        <i class="fa-solid fa-arrow-left text-xl"></i>
                    </a>
                    <h1 class="mr-2 text-3xl font-bold text-[#7A1515]">Company Details</h1>
                </div>
                @if (User.IsInRole("NLO"))
                {
                    <a href="javascript:void(0);" onclick="enableEditMode()" class="fas fa-edit ml-2 text-[#7A1515] hover:text-[#A53D3D]"></a>
                }
            </div>

            <!-- Company Details Form -->
            <form id="editCompanyForm" class="space-y-4">
                <!-- Validation Summary -->
                <div class="mb-4 text-red-500">
                    <div asp-validation-summary="ModelOnly"></div>
                </div>

                <input type="hidden" name="CompanyId" id="companyId" value="@Model.CompanyId" />

                <!-- Company Name -->
                <div>
                    <label asp-for="Name" class="block text-sm font-bold text-gray-700">Company Name</label>
                    <input asp-for="Name" id="companyName" value="@Model.Name" class="w-full cursor-not-allowed rounded border bg-gray-100 px-3 py-2 text-gray-500" readonly />
                    <span asp-validation-for="Name" class="mt-1 block text-sm text-red-500"></span>
                </div>

                <!-- Contact Information -->
                <div class="flex flex-col space-x-4 md:flex-row md:space-x-4">
                    <!-- Contact Email -->
                    <div class="flex-1">
                        <label asp-for="ContactEmail" class="block text-sm font-bold text-gray-700">Contact Email</label>
                        <input asp-for="ContactEmail" id="companyEmail" value="@Model.ContactEmail" class="w-full cursor-not-allowed rounded border bg-gray-100 px-3 py-2 text-gray-500" readonly />
                        <span asp-validation-for="ContactEmail" class="mt-1 block text-sm text-red-500"></span>
                    </div>
                    <!-- Contact Number -->
                    <div class="flex-1">
                        <label asp-for="ContactNumber" class="block text-sm font-bold text-gray-700">Contact Number</label>
                        <input asp-for="ContactNumber" id="companyNumber" value="@Model.ContactNumber" class="w-full cursor-not-allowed rounded border bg-gray-100 px-3 py-2 text-gray-500" readonly />
                        <span asp-validation-for="ContactNumber" class="mt-1 block text-sm text-red-500"></span>
                    </div>
                </div>

                <!-- Address -->
                <div>
                    <label asp-for="Address" class="block text-sm font-bold text-gray-700">Address</label>
                    <input asp-for="Address" id="companyAddress" value="@Model.Address" class="w-full cursor-not-allowed rounded border bg-gray-100 px-3 py-2 text-gray-500" readonly />
                    <span asp-validation-for="Address" class="mt-1 block text-sm text-red-500"></span>
                </div>

                <!-- Description -->
                <div>
                    <label asp-for="Description" class="block text-sm font-bold text-gray-700">Description</label>
                    <textarea asp-for="Description" id="companyDescription" class="w-full cursor-not-allowed rounded border bg-gray-100 px-3 py-2 text-gray-500" readonly>@(string.IsNullOrEmpty(Model.Description) ? "No description." : Model.Description)</textarea>
                    <span asp-validation-for="Description" class="mt-1 block text-sm text-red-500"></span>
                </div>

                <!-- Action Buttons -->
                <div id="editButtons" class="hidden space-x-2">
                    <button type="button" class="rounded bg-gray-500 px-4 py-2 font-semibold text-white hover:bg-gray-600" onclick="cancelEdit()">Cancel</button>
                    <button type="button" class="rounded bg-[#7A1515] px-4 py-2 font-semibold text-white hover:bg-[#A53D3D]" onclick="submitChanges()">Save Changes</button>
                </div>
            </form>

            @if (User.IsInRole("NLO"))
            {
                <!-- Recruiters Section -->
                @await Html.PartialAsync("_RecruiterSection", Model)

                <!-- Jobs Section -->
                @await Html.PartialAsync("_JobSection", Model)
            }
        </div>
    </div>
</div>

<!-- Hidden Data for JavaScript -->
<div id="tempDataContainer" data-success="@TempData["SuccessMessage"]" data-error="@TempData["ErrorMessage"]"></div>
<input type="hidden" id="baseUrl" value="@Url.Action("GetAllCompanies", "Company")" />
<input type="hidden" id="resetUrl" value="@Url.Action("ResetPassword", "Company")" />
<input type="hidden" id="deleteUrl" value="@Url.Action("Delete", "Company")" />

@section Scripts {
    <script src="~/js/company.js"></script>
    <script>
        const urlParams = new URLSearchParams(window.location.search);
        sessionStorage.setItem('sortBy', urlParams.get('sortBy') || '');
        sessionStorage.setItem('verified', urlParams.get('verified') || '');
        sessionStorage.setItem('hasValidMOA', urlParams.get('hasValidMOA') || '');
        sessionStorage.setItem('search', urlParams.get('search') || '');
        sessionStorage.setItem('pageIndex', urlParams.get('pageIndex') || '1');

        document.querySelector('.back-button').addEventListener('click', function (event) {
            event.preventDefault();
            const baseUrl = '@Url.Action($"{aspAction}", "Company")';
            const params = new URLSearchParams();
            params.set('sortBy', sessionStorage.getItem('sortBy') || '');
            params.set('verified', sessionStorage.getItem('verified') || '');
            params.set('hasValidMOA', sessionStorage.getItem('hasValidMOA') || '');
            params.set('search', sessionStorage.getItem('search') || '');
            params.set('pageIndex', sessionStorage.getItem('pageIndex') || '1');
            window.location.href = `${baseUrl}?${params.toString()}`;
        });
    </script>
}
