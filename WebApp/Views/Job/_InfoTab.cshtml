@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@using Data.Models 
@using static Resources.Constants.SvgIcons

@{
    string GetEmploymentTypeColor(string employmentType)
    {
        return employmentType switch
        {
            "Part-time" => "#fdbf77",
            "Full-time" => "#54eba2",
            "Contract" => "#ee6d6b",
            "Internship" => "#82b8f1",
            _ => "#DCDDDF",
        };
    }
}

<div class="min-w-72 overflow-auto rounded-lg border border-gray-200 bg-white p-6 shadow-md">
    <div class="flex items-center justify-between pb-2 text-sm font-normal">
        <div class="flex items-center">
            @Html.Raw(LocationIcon)
            @Model.Location
        </div>

        <!-- Status and Employment Type Badge -->
        <div class="flex items-center space-x-1 text-gray-900">
            <span class="border-2 whitespace-nowrap rounded-md border-green-500 px-2 py-1 pr-2 text-xs font-medium text-gray-900">
                @Model.StatusType.Name
            </span>
            <span class="border-2 whitespace-nowrap rounded-md px-2 py-1 text-xs font-medium text-gray-900"
                style="background-color:@GetEmploymentTypeColor(Model.EmploymentType.Name);">
                @Model.EmploymentType.Name
            </span>   
        </div>
    </div>

    <div class="text-lg font-bold">@(Model.Salary == "Php 0 - Php 0" ? "Unpaid" : Model.Salary)</div>
    <span class="text-sm font-semibold text-gray-700">Available Slots: @Model.AvailableSlots</span>

    <hr class="border-gray-300" />
    <h3 class="mb-3 text-sm font-semibold text-gray-500">Details</h3>

    <ul class="space-y-4 text-sm text-gray-700">
        <li class="gap-2">
            <div class="flex items-center">
                @Html.Raw(ScheduleIcon)
                <span class="pl-2 pr-1 font-semibold">Schedule (Weekly):</span>
            </div>
            <span class="pl-8">@Model.Schedule</span>
        </li>
        <li class="gap-2">
            <div class="flex items-center">
                @Html.Raw(YearLevelIcon)
                <span class="pl-1 pr-1 font-semibold">Year Level:</span>
            </div>
        <span class="pl-8">@Model.YearLevel.Name</span>
        </li>
        <li class="max-w-96 gap-2">
            <div class="flex items-center">
                @Html.Raw(ProgramsIcon)
                <span class="pl-2 pr-1 font-semibold">Programs:</span>
            </div>
            <div class="pl-8">@string.Join(", ", (Model.Programs as List<Program>).Select(program => program.Name))</div>
        </li>
    </ul>

    <hr class="border-gray-300" />
    <h3 class="mb-3 text-sm font-semibold text-gray-500">Contact Information</h3>

    <ul class="space-y-4 text-sm text-gray-700">
        <li class="flex pr-2">
            <span class="pr-2 font-semibold">Email: </span>
            <span>@Model.Company.ContactEmail</span>
        </li>
        <li class="flex pr-2">
            <span class="pr-2 font-semibold">Phone: </span>
            <span>@Model.Company.ContactNumber</span>
        </li>
    </ul>
</div>

@section Scripts {
    <script src="~/js/toastrNotification.js"></script>
    <script>
        function goBack() {
            const baseUrl = '@Url.Action("Index", "Job")'; // Use your actual action name here
            const params = new URLSearchParams();
            params.set('sortBy', sessionStorage.getItem('sortBy') || '');
            params.set('filterByCompany', sessionStorage.getItem('filterByCompany') || '');
            params.set('filterByEmploymentType', sessionStorage.getItem('filterByEmploymentType') || '');
            params.set('filterByStatusType', sessionStorage.getItem('filterByStatusType') || '');
            params.set('filterByWorkSetup', sessionStorage.getItem('filterByWorkSetup') || '');
            window.location.href = `${baseUrl}?${params.toString()}`;
        }
    </script>
}
