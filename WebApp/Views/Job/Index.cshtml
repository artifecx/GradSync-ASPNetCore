@model Services.ServiceModels.PaginatedList<Services.ServiceModels.JobViewModel>
@using Data.Models
@using Humanizer

@{
    ViewData["Title"] = "Recruiter Job Management";
    await Html.RenderPartialAsync("_CreateJobModal", new Services.ServiceModels.JobViewModel());

    string filterByCompany = ViewData["FilterByCompany"] as string;
    string filterByEmploymentType = ViewData["FilterByEmploymentType"] as string;
    string filterByStatusType = ViewData["FilterByStatusType"] as string;
    string filterByWorkSetup = ViewData["FilterByWorkSetup"] as string;

    string sortBy = ViewData["SortBy"] as string;
    string search = ViewData["Search"] as string;

    int pageIndex = Model.PageIndex;
    string aspAction = "GetAllJobsRecruiter";
}

<div class="bg-[#F5F7F8] flex min-h-screen">
    <div class="flex-1 flex items-center justify-center p-3">
        <div class="h-full w-full max-w-7xl rounded-lg bg-white p-6 shadow-md">
            <div class="flex items-center justify-between">
                <h1 class="pb-8 text-left text-4xl font-bold text-[#7A1515]">
                    Recruiter Job Management
                </h1>

                <!-- Search and Add Job Button -->
                <div class="flex items-center pb-8 space-x-2">
                    <div class="flex items-center space-x-2">
                        <form method="get" asp-action="@aspAction" asp-route-sortBy="@sortBy" asp-route-search="@search" class="flex items-center">
                            @await Component.InvokeAsync("SearchInput", new { searchValue = search, placeholder = "Name, contact, address" })
                            <input type="hidden" name="sortBy" value="@sortBy" />
                        </form>
                    </div>
                    <div class="flex items-center space-x-2">
                        <button type="button"
                                class="ml-4 rounded-md bg-[#7A1515] px-4 py-2 font-semibold text-white hover:bg-[#A53D3D]"
                                data-toggle="modal"
                                data-target="#createJobModal">
                            <i class="fas fa-plus pr-1"></i> Add Job
                        </button>
                    </div>
                </div>
            </div>

            <!-- Table -->
            <div class="min-w-full bg-whit rounded-lg">
                <table class="min-w-full table-auto border rounded-lg bg-white">
                    <thead class="bg-gray-100 border rounded-lg">
                        @await Html.PartialAsync("_JobTableHeader", Model)
                    </thead>
                    <tbody class="divide-y divide-gray-200 border rounded-lg bg-white">
                        @await Html.PartialAsync("_JobTableBody", Model)
                    </tbody>
                </table>

                <!-- Pagination -->
                <nav class="flex justify-center pt-3">
                    <ul class="pagination flex items-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link border border-red-300 px-3 py-1 text-gray-700 hover:bg-gray-200"
                                   asp-action="@aspAction"
                                   asp-route-pageIndex="@(Model.PageIndex - 1)"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link border px-3 py-1 @(i == Model.PageIndex ? "bg-blue-500 text-white" : "text-gray-700 hover:bg-gray-200")"
                                   asp-action="@aspAction"
                                   asp-route-pageIndex="@i"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search">
                                    @i
                                </a>
                            </li>
                        }
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link border border-red-300 px-3 py-1 text-gray-700 hover:bg-gray-200"
                                   asp-action="@aspAction"
                                   asp-route-pageIndex="@(Model.PageIndex + 1)"
                                   asp-route-sortBy="@sortBy"
                                   asp-route-search="@search">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/toastrNotification.js"></script>
    <script src="~/js/job.js"></script>
    <script>
        function debounceSearch(query) {
            clearTimeout(window.searchTimeout);
            window.searchTimeout = setTimeout(function () {
                window.location.href = '@Url.Action("GetAllJobsRecruiter")?search=' + query;
            }, 300);
        }
    </script>
}