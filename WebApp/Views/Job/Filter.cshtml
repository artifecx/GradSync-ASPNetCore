@model JobDropdownPopulationModel
@using Data.Models

@{
    var jobTypes = Model.EmploymentTypes;
    var setupType = Model.SetupTypes;

    string search = ViewData["Search"] as string;
    string filterByDatePosted = ViewData["FilterByDatePosted"] as string;
    string filterBySalary = ViewData["FilterBySalary"] as string;
    List<string> filterByEmploymentType = ViewData["FilterByEmploymentType"] as List<string>;
    List<string> filterByWorkSetup = ViewData["FilterByWorkSetup"] as List<string>;

    string sortBy = ViewData["SortBy"] as string;
    string sortByDefault = sortBy == "match" || string.IsNullOrEmpty(sortBy) ? "match" : null;
    string sortBySalary = sortBy == "salary_asc" ? "salary_desc" : "salary_asc";
    string sortByDate = sortBy == "created_asc" ? "created_desc" : "created_asc";
}

<!-- Sidebar Filter -->
<div class="h-screen w-80 rounded-lg border-gray-200 bg-white p-6 shadow-md">
    <div class="mb-6 flex items-center justify-between">
        <div class="text-xl font-semibold text-gray-800">Filter Jobs</div>
        <button type="reset" form="filterForm"
                class="text-sm font-medium text-gray-500 transition-colors duration-200 hover:text-[#991b1b]">
            Clear all
        </button>
    </div>

    <form id="filterForm" method="get" asp-action="GetAllJobsApplicant">
        <!-- Date Post Filter -->
        <div class="pb-3 pt-2 text-sm">
            <label for="filterByDatePosted" class="mb-2 block text-sm font-medium text-[#7A1515]">DATE POSTED</label>
            <select name="filterByDatePosted" id="filterByDatePosted"
                    class="w-full rounded-lg border border-gray-300 bg-gray-50 px-2 py-2 transition-all duration-200 focus:ring-[#991b1b] focus:border-[#991b1b]">
                <option value="" selected=@(string.IsNullOrEmpty(filterByDatePosted) || string.Equals(filterByDatePosted, "match"))>Anytime</option>
                <option value="today" selected=@(string.Equals(filterByDatePosted, "today"))>Today</option>
                <option value="week" selected=@(string.Equals(filterByDatePosted, "week"))>This Week</option>
                <option value="month" selected=@(string.Equals(filterByDatePosted, "month"))>This Month</option>
            </select>
        </div>

        <!-- Job Type Filter -->
        <div class="pb-3 pt-2 text-sm">
            <label for="filterByEmploymentType" class="mb-2 block text-sm font-medium text-[#7A1515]">JOB TYPE</label>
            <div class="grid-cols-2 grid gap-2">
                @foreach (var jobType in jobTypes)
                {
                    <div class="flex items-center">
                        <input type="checkbox"
                               class="h-4 w-4 rounded border-red-500 text-red-600 focus:ring-red-500"
                               id="filterByEmploymentType_@jobType.EmploymentTypeId"
                               name="filterByEmploymentType"
                               value="@jobType.Name"
                               @(filterByEmploymentType.Contains(jobType.Name) ? "checked" : "")>
                        <label for="filterByEmploymentType_@jobType.EmploymentTypeId" class="pl-1 pt-2 capitalize text-gray-700">
                            @jobType.Name
                        </label>
                    </div>
                }
            </div>
        </div>

        <!-- Salary Range Slider -->
        <div class="pb-3 pt-2 text-sm">
            <label for="filterBySalary" class="mb-2 block text-sm font-medium text-[#7A1515]">MONTHLY SALARY RANGE (₱)</label>
            <div class="relative">
                <input type="range" id="filterBySalary_range" min="0" max="60000" step="100" value=@(!string.IsNullOrEmpty(filterBySalary) ? filterBySalary : 60000)
                       class="h-2 w-full appearance-none rounded-lg bg-gray-200 focus:outline-none focus:ring-2 focus:ring-[#7A1515]">
                <div class="opacity-10 pointer-events-none absolute inset-0 rounded-lg"></div>
            </div>
            <div class="mb-2 flex items-center justify-between text-xs text-gray-500">
                <span>₱0</span>
                <span>₱60,000+</span>
            </div>
            <div class="mt-2 flex justify-center text-sm text-gray-600">
                <input type="number" id="filterBySalary" name="filterBySalary" value=@(!string.IsNullOrEmpty(filterBySalary) ? filterBySalary : 60000) min="0" max="60000"
                       class="w-full max-w-xs rounded-lg border border-red-500 px-3 py-2 text-sm focus:ring-[#7A1515] focus:border-[#7A1515]" placeholder="Enter salary ₱">
            </div>
        </div>

        <!-- Work Mode Filter-->
        <div class="pb-3 pt-2 text-sm">
            <label for="filterByWorkSetup" class="mb-2 block text-sm font-medium text-[#7A1515]">WORK SET-UP</label>
            <div class="grid-cols-2 grid gap-2">
                @foreach (var workMode in setupType)
                {
                    <div class="flex items-center">
                        <input type="checkbox"
                               class="h-4 w-4 rounded border-red-500 text-red-600 focus:ring-red-500"
                               id="filterByWorkSetup_@workMode.SetupTypeId"
                               name="filterByWorkSetup"
                               value="@workMode.Name"
                               @(filterByWorkSetup.Contains(workMode.Name) ? "checked" : "")>
                        <label for="filterByWorkSetup_@workMode.SetupTypeId" class="pl-1 pt-2 capitalize text-gray-700">
                            @workMode.Name
                        </label>
                    </div>
                }
            </div>
        </div>

        <!-- Apply Filter Button -->
        <div>
            <button type="submit"
                    class="w-full rounded-lg bg-[#7A1515] px-3 py-2 text-sm font-semibold text-white transition-all duration-200 hover:bg-[#991b1b]">
                Apply Filters
            </button>
        </div>

        <input type="hidden" name="sortBy" value="@sortBy" />
        <input type="hidden" name="search" value="@search" />
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const salaryRange = document.getElementById("filterBySalary_range");
        const customSalaryInput = document.getElementById("filterBySalary");

       
        salaryRange.addEventListener("input", () => {
            console.log(customSalaryInput.value);
            customSalaryInput.value = salaryRange.value;
            console.log(salaryRange.value);
        });

        customSalaryInput.addEventListener("input", () => {
            const value = customSalaryInput.value;
            console.log(value);
            if (value >= 0 && value <= 60000) {
                salaryRange.value = value;
                console.log(salaryRange.value);
            }
        });

        const filterForm = document.getElementById("filterForm");
        filterForm.addEventListener("reset", () => {
            var url = new URL(window.location);

            url.searchParams.delete('search');
            url.searchParams.delete('sortBy');
            url.searchParams.delete('filterBySalary');
            url.searchParams.delete('filterByDatePosted');
            url.searchParams.delete('filterByWorkSetup');
            url.searchParams.delete('filterByEmploymentType');
            window.history.replaceState(null, null, url);
            location.reload();
        });
    });
</script>
