@model Services.ServiceModels.PaginatedList<Services.ServiceModels.JobViewModel>
@using Data.Models
@using Humanizer

@{
    ViewData["Title"] = "All Jobs";

    string filterByCompany = ViewData["FilterByCompany"] as string;
    string filterByEmploymentType = ViewData["FilterByEmploymentType"] as string;
    string filterByStatusType = ViewData["FilterByStatusType"] as string;
    string filterByWorkSetup = ViewData["FilterByWorkSetup"] as string;

    string sortBy = ViewData["SortBy"] as string;
    string search = ViewData["Search"] as string;

    bool noResult = string.IsNullOrEmpty(search) && 
        string.IsNullOrEmpty(filterByCompany) && 
        string.IsNullOrEmpty(filterByEmploymentType) &&
        string.IsNullOrEmpty(filterByStatusType) && 
        string.IsNullOrEmpty(filterByWorkSetup);
}

@if (!Model.Any())
{
    <tr>
        <td colspan="13" class="whitespace-nowrap px-6 py-3 text-center text-sm text-gray-500">
            @(noResult ? Html.Raw("No jobs found") : Html.Raw("No jobs found matching the criteria"))
        </td>
    </tr>
}
else
{
    @foreach (var item in Model)
    {
        <tr class="hover:bg-gray-100">
            <td class="px-6 py-3 text-sm text-gray-700">@Html.DisplayFor(modelItem => item.Title)</td>
            @if (!User.IsInRole("Recruiter"))
            {
                <td class="px-6 py-3 text-sm text-gray-700">@Html.DisplayFor(modelItem => item.Company.Name)</td>
            }
            else
            {
                <td class="px-6 py-3 text-sm text-gray-700">@Html.DisplayFor(modelItem => item.AvailableSlots)</td>
            }
            <td class="px-6 py-3 text-sm text-gray-700">@Html.DisplayFor(modelItem => item.EmploymentType.Name)</td>
            <td class="px-6 py-3 text-sm text-gray-700">@Html.DisplayFor(modelItem => item.StatusType.Name)</td>
            <td class="px-6 py-3 text-sm text-gray-700">@Html.DisplayFor(modelItem => item.SetupType.Name)</td>
            <td class="px-6 py-3 text-sm text-gray-700">@Html.DisplayFor(modelItem => item.CreatedDate)</td>
            <td class="py-3 pl-6 text-left">
                <div class="relative">
                    <!-- Dropdown Button -->
                    <button data-jobid="@item.JobId"
                            class="actionDropdownJobBtn cursor-pointer px-6 text-black hover:text-[#A53D3D] focus:outline-none">
                        <i class="fas fa-ellipsis-v"></i>
                    </button>

                    <div id="actionDropdownJobMenu-@item.JobId"
                         class="actionDropdownJobMenu z-10 ring-1 ring-opacity-5 absolute right-0 mt-2 hidden w-48 origin-top-right rounded-md bg-white text-left shadow-lg ring-black">
                        <div class="space-y-1 py-1">

                            <!-- Job Details -->
                            <button onclick="location.href='@Url.Action("GetJob", "Job", 
                                    new { 
                                        id = item.JobId, 
                                        sortBy = sortBy, 
                                        search = search, 
                                        pageIndex = Model.PageIndex ,
                                        filterByStatusType = filterByStatusType,
                                        filterByWorkSetup = filterByWorkSetup,
                                        filterByEmploymentType = filterByEmploymentType,
                                        filterByCompany = filterByCompany
                                    })'"
                                    class="text-grey-700 w-full cursor-pointer px-4 py-2 text-left text-sm hover:text-[#A53D3D] focus:outline-none">
                                <i class="fas fa-info-circle mr-2"></i> Job Details
                            </button>

                            <!-- Edit Job -->
                            <button onclick="location.href='@Url.Action("GetJob", "Job", 
                                    new { 
                                        id = item.JobId,
                                        sortBy = sortBy,
                                        search = search,
                                        pageIndex = Model.PageIndex ,
                                        filterByStatusType = filterByStatusType,
                                        filterByWorkSetup = filterByWorkSetup,
                                        filterByEmploymentType = filterByEmploymentType,
                                        filterByCompany = filterByCompany,
                                        showModal = "editJob" 
                                    })'"
                                    class="text-grey-700 w-full cursor-pointer px-4 py-2 text-left text-sm hover:text-[#A53D3D] focus:outline-none">
                                <i class="fas fa-edit -circle mr-2"></i> Edit Job Info
                            </button>

                            <!-- Archive Job -->
                            <button onclick=" displayDeleteModal('@item.JobId' , '@item.PostedBy)"
                                    class="text-grey-700 w-full cursor-pointer px-4 py-2 text-left text-sm hover:text-[#A53D3D] focus:outline-none">
                                <i class="fas fa-info-circle mr-2"></i> Archive Chat
                            </button>
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    }
}

<!-- Values passed to the js files -->
<input type="hidden" id="deleteUrl" value="@Url.Action("Archive", "Job")" />

 @section Scripts {
    <script src="~/js/delete.js"></script>
    <script src="~/js/toastrNotification.js"></script>
    <script src="~/js/archive.js"></script>
    <script src="~/js/job.js"></script>
}
        