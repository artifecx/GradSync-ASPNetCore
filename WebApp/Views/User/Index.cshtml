@model Services.ServiceModels.PaginatedList<Services.ServiceModels.UserViewModel>
@using Humanizer

@{
    ViewData["Title"] = "All Users";
    await Html.RenderPartialAsync("_AddUserModal", new Services.ServiceModels.UserViewModel());
    await Html.RenderPartialAsync("_ResetPasswordModal");
    await Html.RenderPartialAsync("_DeleteModal");

    string aspAction = "GetAllUsers";
    string search = ViewData["Search"] as string;
    string sortBy = ViewData["SortBy"] as string;
    string role = ViewData["Role"] as string;
    bool? verified = ViewData["Verified"] as bool?;
    int pageIndex = Model.PageIndex;

    string sortByName = string.IsNullOrEmpty(sortBy) ? "name_desc" : null;
    string sortByEmail = sortBy == "email" ? "email_desc" : "email";
}


<div class="bg-[#F5F7F8]">
    <div class="flex min-h-screen">
        <div class="flex-1 flex items-center justify-center p-3">
            <div class="h-full w-full max-w-7xl rounded-lg bg-white p-6 shadow-md">
                <div class="flex items-center justify-between">
                    <h1 class="pb-8 text-left text-4xl font-bold text-[#7A1515]">User Management</h1>

                    <!-- Search and Add User Button -->
                    <div class="flex items-center pb-8">
                        <form method="get" asp-action="@aspAction" class="flex items-center space-x-2">
                            @await Component.InvokeAsync("SearchInput", new { searchValue = search, placeholder = "Search by name or email" })
                            <input type="hidden" name="sortBy" value="@sortBy" />
                            <input type="hidden" name="role" value="@role" />
                            <input type="hidden" name="verified" value="@verified" />
                        </form>

                        @if (User.IsInRole("Admin"))
                        {
                            <button type="button"
                                    class="ml-4 rounded-md bg-[#7A1515] px-4 py-2 font-semibold text-white hover:bg-[#A53D3D]" data-toggle="modal" data-target="#addUserModal">
                                <i class="fas fa-plus"></i> Add User
                            </button>
                        }
                    </div>
                </div>

                <!-- User Table -->
                <div class="h-[80vh] overflow-auto rounded-lg bg-[#F5F7F8]">
                    <table class="min-w-full table-auto rounded-lg bg-white">
                        <thead class="bg-gray-100">
                            <tr>
                                <th class="px-6 py-3 text-sm font-medium uppercase tracking-wider text-gray-500">
                                    <a asp-action="@aspAction"
                                       asp-route-sortBy="@sortByName"
                                       asp-route-search="@search"
                                       asp-route-pageIndex="@pageIndex"
                                       asp-route-role="@role"
                                       asp-route-verified="@verified"
                                       class="cursor-pointer text-black hover:text-[#A53D3D]">
                                        Name
                                        @(string.IsNullOrEmpty(sortBy) ? Html.Raw("<i class='fas fa-sort'></i>") :
                                            (sortBy == "name_desc" ? Html.Raw("<i class='fas fa-sort-down'></i>") : Html.Raw("<i class='fas fa-sort-up'></i>")))
                                    </a>
                                </th>

                                <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider text-gray-500">
                                    <a asp-action="@aspAction"
                                       asp-route-sortBy="@sortByEmail"
                                       asp-route-search="@search"
                                       asp-route-pageIndex="@pageIndex"
                                       asp-route-role="@role"
                                       asp-route-verified="@verified"
                                       class="cursor-pointer text-black hover:text-[#A53D3D">
                                        Email
                                        @(sortBy == "email" ? Html.Raw("<i class='fas fa-sort-up'></i>") :
                                            (sortBy == "email_desc" ? Html.Raw("<i class='fas fa-sort-down'></i>") : Html.Raw("<i class='fas fa-sort'></i>")))
                                    </a>
                                </th>

                                <!-- Role Dropdown Filter -->
                                <th class="px-6 py-3 text-left text-sm font-medium uppercase tracking-wider text-gray-500">
                                    <div class="relative">
                                        <button class="cursor-pointer uppercase text-black hover:text-[#A53D3D]" id="roleDropdown">
                                            Role <i class="fas fa-chevron-down"></i>
                                        </button>
                                        <div class="absolute mt-1 hidden rounded-md border bg-white" id="roleDropdownMenu">
                                            <a asp-action="@aspAction"
                                               asp-route-role=""
                                               class="block px-4 py-2 hover:bg-gray-100">All</a>
                                            @foreach (var r in ViewBag.Roles)
                                            {
                                                <a asp-action="@aspAction"
                                                   asp-route-role="@r.Name"
                                                   class="block px-4 py-2 hover:bg-gray-100">@r.Name</a>
                                            }
                                        </div>
                                    </div>
                                </th>

                                <!-- Verified Dropdown Filter -->
                                <th class="pl-6 py-3 text-left text-sm font-medium uppercase tracking-wider text-gray-500">
                                    <div class="relative">
                                        <button class="cursor-pointer uppercase pl-6 text-black hover:text-[#A53D3D]" id="verifiedDropdown">
                                            Verified <i class="fas fa-chevron-down"></i>
                                        </button>

                                        <div class="absolute mt-1 hidden rounded-md border bg-white" id="verifiedDropdownMenu">
                                            <a class="block px-4 py-2 text-sm hover:bg-gray-100"
                                               asp-action="@aspAction"
                                               asp-route-sortBy="@sortBy"
                                               asp-route-search="@search"
                                               asp-route-role="@role"
                                               asp-route-verified="">All</a>
                                            <a class="block px-4 py-2 text-sm hover:bg-gray-100"
                                               asp-action="@aspAction"
                                               asp-route-sortBy="@sortBy"
                                               asp-route-search="@search"
                                               asp-route-role="@role"
                                               asp-route-verified="true">Verified</a>
                                            <a class="block px-4 py-2 text-sm hover:bg-gray-100"
                                               asp-action="@aspAction"
                                               asp-route-sortBy="@sortBy"
                                               asp-route-search="@search"
                                               asp-route-role="@role"
                                               asp-route-verified="false">Unverified</a>
                                        </div>
                                    </div>
                                </th>

                                <th class="py-3 text-left text-sm font-medium uppercase tracking-wider text-black hover:text-[#A53D3D]">Action</th>
                            </tr>
                        </thead>

                        <tbody class="divide-y divide-gray-200 bg-white">
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="6" class="whitespace-nowrap px-6 py-3 text-center text-sm text-gray-500">
                                        @(string.IsNullOrEmpty(search) ? "No users found." : "No users found matching the criteria.")
                                    </td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var item in Model)
                                {
                                    await Html.RenderPartialAsync("_EditUserModal", item);
                                    <tr class="hover:bg-gray-100">
                                        <td class="px-6 py-3 whitespace-nowrap text-sm text-gray-900">
                                            <div class="flex items-center">
                                                <img src="https://ui-avatars.com/api/?name=@item.FirstName+@item.LastName" alt="Profile Image" class="h-8 w-8 rounded-full mr-3">
                                                @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                                            </div>
                                        </td>
                                        <td class="px-6 py-3 text-sm text-gray-500">@Html.DisplayFor(modelItem => item.Email)</td>
                                        <td class="px-6 py-3 text-sm text-gray-500">@Html.DisplayFor(modelItem => item.RoleId)</td>
                                        <td class="pl-12 py-3 text-sm text-left">
                                            @if (item.IsVerified)
                                            {
                                                <span class="text-green-600">
                                                    <i class="fas fa-check-circle"></i> Verified
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-red-600">
                                                    <i class="fas fa-times-circle"></i> Not Verified
                                                </span>
                                            }
                                        </td>

                                        <td class="pl-6 py-3 text-left">
                                            <div class="relative">
                                                <button data-userid="@item.UserId" class="actionDropdownBtn cursor-pointer text-black hover:text-[#A53D3D] focus:outline-none px-6">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </button>

                                                @*Action Dropdown Menu AMBOT NLNG GAJUD LATER NLNG YAN*@
                                                <div id="actionDropdownMenu-@item.UserId" 
                                                    class="actionDropdownMenu z-10 ring-1 ring-opacity-5 absolute right-0 mt-2 hidden w-48 origin-top-right rounded-md bg-white text-left shadow-lg ring-black">
                                                    <div class="space-y-1 py-1">
                                                        <!-- Edit User -->
                                                        <a href="javascript:void(0);"
                                                           onclick="displayEditModal(
                                                            '@item.UserId','@item.FirstName'
                                                            ,'@item.LastName','@item.MiddleName'
                                                            ,'@item.Suffix','@item.Email'
                                                            ,'@item.RoleId','@item.IsVerified')"
                                                           class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-[#A53D3D]">
                                                            <i class="fas fa-edit mr-2 w-5"></i>
                                                            <span>Edit</span>
                                                        </a>

                                                        <!-- Reset Password -->
                                                        <button onclick="displayResetPasswordModal('@item.UserId', '@item.FirstName')"
                                                                class="flex w-full items-center px-4 py-2 text-left text-sm text-blue-600 hover:bg-gray-100 hover:text-blue-800">
                                                            <i class="fas fa-key mr-2 w-5" aria-hidden="true"></i>
                                                            <span>Reset Password</span>
                                                        </button>

                                                        <!-- Delete User -->
                                                        <button type="button" onclick="displayDeleteModal('@item.UserId', '@item.FirstName')"
                                                                class="flex w-full items-center px-4 py-2 text-left text-sm text-red-600 hover:bg-gray-100 hover:text-red-800">
                                                            <i class="fas fa-trash-alt mr-2 w-5" aria-hidden="true"></i>
                                                            <span>Delete</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <nav class="flex justify-center pt-3">
                    <ul class="pagination flex items-center">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link border border-red-300 px-3 py-1 text-gray-700 hover:bg-gray-200" asp-action="@aspAction" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-sortBy="@sortBy" asp-route-search="@search">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        }
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link border px-3 py-1 @(i == Model.PageIndex ? "bg-blue-500 text-white" : "text-gray-700 hover:bg-gray-200")" asp-action="@aspAction" asp-route-pageIndex="@i" asp-route-sortBy="@sortBy" asp-route-search="@search">@i</a>
                            </li>
                        }
                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link border border-red-300 px-3 py-1 text-gray-700 hover:bg-gray-200" asp-action="@aspAction" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-sortBy="@sortBy" asp-route-search="@search">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

    <!-- Values passed to the js files -->
    <div id="tempDataContainer" data-success="@TempData["SuccessMessage"]" data-error="@TempData["ErrorMessage"]"></div>
    <input type="hidden" id="baseUrl" value="@Url.Action("GetAllUsers", "User")" />
    <input type="hidden" id="resetUrl" value="@Url.Action("ResetPassword", "User")" />
    <input type="hidden" id="deleteUrl" value="@Url.Action("Delete", "User")" />

@section Scripts{
    <script src="~/js/delete.js"></script>
    <script src="~/js/toastrNotification.js"></script>
    <script src="~/js/user.js"></script>
    <script>
        document.addEventListener('click', function (e) {
            const actionBtn = e.target.closest('.actionDropdownBtn');
            if (actionBtn) {
                const userId = actionBtn.dataset.userid;
                const menu = document.getElementById(`actionDropdownMenu-${userId}`);
                menu.classList.toggle('hidden');
                document.querySelectorAll('.actionDropdownMenu').forEach(m => {
                    if (m.id !== `actionDropdownMenu-${userId}`) {
                        m.classList.add('hidden');
                    }
                });
                return;
            }

            if (!e.target.closest('.actionDropdownMenu') && !e.target.closest('.actionDropdownBtn')) {
                document.querySelectorAll('.actionDropdownMenu').forEach(menu => {
                    menu.classList.add('hidden');
                });
            }

            if (e.target.closest('#roleDropdown')) {
                document.getElementById('roleDropdownMenu').classList.toggle('hidden');
                return;
            }

            if (e.target.closest('#verifiedDropdown')) {
                document.getElementById('verifiedDropdownMenu').classList.toggle('hidden');
                return;
            }
            if (!e.target.closest('#roleDropdownMenu') && !e.target.closest('#roleDropdown')) {
                document.getElementById('roleDropdownMenu').classList.add('hidden');
            }
            if (!e.target.closest('#verifiedDropdownMenu') && !e.target.closest('#verifiedDropdown')) {
                document.getElementById('verifiedDropdownMenu').classList.add('hidden');
            }
        });
    </script>
}